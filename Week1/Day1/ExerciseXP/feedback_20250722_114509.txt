URL: https://github.com/RIbald0/DI-Bootcamp/blob/main/Week1/Day1/ExerciseXP/ExerciseXP.py
suggestions for improvement:
- In Exercise 3, the code should provide the actual output, not just comments predicting the output.  For example,  `print(5 < 3)` instead of just `False`.
- Exercise 5 could use f-strings for better readability and conciseness.  For example, `info = f'My name is {name}, I am {age} years old and my shoe size is {shoe_size}'`
- In exercises 7 and 9, the error handling is good, but a more specific `ValueError` catch would improve readability and clarity.
- Exercise 8's capitalization is a good effort to handle case-insensitive comparison, but it could be enhanced for robustness.   Consider using `.lower()` for a more reliable comparison, accounting for various capitalization styles.
- Add comments to explain more complex logic, such as the `while True` loop in Exercises 7 and 9.  A comment explaining the purpose of the loop would significantly improve readability.
Brief justification:
- correctness: The code correctly implements the functionalities described in Exercises 1, 2, 4, 5, 6, 7, 8, and 9.  Exercise 3 partially addresses the requirements; it provides the correct answers in comments, but it should `print` the results of the boolean expressions for a more complete solution.  This results in a slight deduction from full marks.
- readability: The code is generally readable, but some improvements can be made.  The use of f-strings in some places and comments in others would improve its clarity. While the code is functional, adopting consistent styling (like using f-strings consistently where appropriate) would make it easier to understand and maintain.
- performance: The code's performance is efficient for the tasks it performs.  The algorithms used are simple and directly solve the given problems without unnecessary overhead.
- security: The code has a small security vulnerability in Exercises 7 and 9.  While it handles non-numeric input, it uses a generic `except` block. A more precise error handling using `except ValueError`  would make the code more robust and secure by preventing unexpected exceptions that a malicious user could potentially exploit. Using `.lower()` to compare strings instead of `.capitalize()` in exercise 8 is a little more robust because it's more likely to handle a wider variety of user inputs correctly.

